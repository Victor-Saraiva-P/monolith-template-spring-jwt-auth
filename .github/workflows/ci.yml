name: CI

on:
    push:
        branches: [ main ]
    pull_request:

jobs:
    build:
        runs-on: ubuntu-latest

        services:
            postgres:
                image: postgres:17.4
                env:
                    POSTGRES_DB: monolith_authdb
                    POSTGRES_USER: auth
                    POSTGRES_PASSWORD: authpwd
                ports:
                    - 5432:5432
                options: >-
                    --health-cmd pg_isready
                    --health-interval 10s
                    --health-timeout 5s
                    --health-retries 5

        steps:
            # 1) Checkout do c칩digo
            -   name: Checkout
                uses: actions/checkout@v4

            # 2) Garante que o daemon Docker est치 ativo
            -   name: Ensure Docker daemon is running
                run: |
                    sudo systemctl start docker
                    docker info

            # 3) Criar usu치rio root DEPOIS do checkout e ANTES dos testes
            -   name: Create root user
                run: |
                    docker exec -i $(docker ps -q -f 'ancestor=postgres:17.4') psql -U auth -d monolith_authdb -c "CREATE USER root WITH PASSWORD 'password' SUPERUSER;"

            # 4) Maven wrapper execut치vel
            -   name: Make wrapper executable
                run: chmod +x mvnw

            # 5) Java 21 (Temurin)
            -   name: Set up JDK 21
                uses: actions/setup-java@v4
                with:
                    java-version: 21
                    distribution: temurin
                    cache: maven

            # 6) Build + testes
            -   name: Build & Test
                run: SPRING_PROFILES_ACTIVE=test ./mvnw --batch-mode verify
                env:
                    SPRING_DATASOURCE_USERNAME: auth
                    SPRING_DATASOURCE_PASSWORD: authpwd
                    SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/monolith_authdb
